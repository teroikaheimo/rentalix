{"version":3,"sources":["Components/Settings.js","Auth.js","Components/LoginRegister.js","DbAction.js","Components/ItemRowMenu.js","Components/ItemTableRow.js","Components/ItemTable.js","Components/ItemModal.js","Components/UserModal.js","Components/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["Settings","getAllAvaileable","getItem","insertItem","modifyItem","deleteItem","login","logout","register","usernameAvailable","getCategories","getOwner","getAddress","updatePassword","getUserRents","getAllRents","reserveInsert","reserveModify","reserveDelete","rentInsert","rentModify","rentReturn","rentReturnReserved","src_Auth","Auth","Object","classCallCheck","this","username","authenticated","admin","userId","console","log","Promise","resolve","reject","fetch","settings","method","headers","Accept","Content-Type","body","JSON","stringify","then","result","json","success","catch","err","pwd","pwdCheck","_this","length","password","_this2","sendResult","id","logged","_this3","_this4","LoginRegister","_Component","props","possibleConstructorReturn","getPrototypeOf","call","_handleKeyPress","e","key","tryLogin","handleChange","event","setState","defineProperty","target","value","state","inputUsernameLog","inputPasswordLog","inputUsernameReg","inputPasswordReg","inputPasswordConfReg","regOk","pwdMatch","pwdCheckedOnce","usernameLength","loginFail","checkPwdMatch","bind","assertThisInitialized","checkUsername","registerUser","inherits","createClass","pwdChangeOk","react_default","a","createElement","className","role","setLoginFail","Login","history","push","_this5","displayRegTip","htmlFor","type","onChange","placeholder","onKeyPress","required","autoFocus","onClick","data-toggle","data-target","tabIndex","aria-labelledby","aria-hidden","data-dismiss","aria-label","onBlur","LoginRegister_UsernameTaken","LoginRegister_UsernameLength","LoginRegister_PwdTip","Component","UsernameTaken","UsernameLength","PwdTip","src_DbAction","DbAction","itemData","itemToModifyId","name","brand","model","info","address","owner","category","itemInfo","getItems","dropdownData","newPassword","search","text","reservation_id","item_id","start_date","end_date","user_id","reservation_start","reservation_end","ItemsRowMenu","onItemChangeRemote","rowData","reservationDelete","data","endDate","Date","setHours","getHours","getTimezoneOffset","now","rentView","src","alt","toggleModalRemote","itemInputView","reservationInput","rentInput","rent_id","hidden","isInHistory","returnRentReserved","returnRent","deleteReservation","reserveView","itemInput","deleteRow","rentInputView","ItemTableRow","apply","arguments","ItemTableRow_ColData","serial","ItemRowMenu_ItemsRowMenu","ItemTableRowHeader","_Component2","ItemTableRow_ColHeaderData","ColData","ColHeaderData","scope","ItemTable","formatDate","updateRows","updateTableRowsGetSet","dbActions","fetchItems","auth","fetchAllRents","fetchUserRents","startDate","formatedDate","format","str","slice","isHistory","map","inputRowData","index","ItemTableRow_ItemTableRow","typeText","returnHeader","ItemTableRow_ItemTableRowHeader","ItemModal","inputName","inputBrand","inputModel","inputInfo","inputAddress","inputCategory","inputOwner","inputCategoryDd","inputAddressDd","inputOwnerDd","inputReservationStartDate","inputReservationEndDate","inputReservationStartTime","inputReservationEndTime","inputRentStartDate","inputRentStartTime","inputRentEndDate","inputRentEndTime","modal","backdrop","addMode","modalHeader","hideDate","failText","reservationId","reservationFail","reservationModifyFail","reservationDeleteFail","rented","rentFail","newItemFail","dateNow","timeNow","onChangeState","rentItem","reservationModify","reserveItem","toggle","addItem","saveChanges","toggleModal","want","split","obj","header","isset","dateOrTime","resetModal","checkInput","inputOrDd","noErrors","validateInput","compareDate","reservationInsert","response","row","message","_this6","_this7","_this8","date","time","prototype","addTimeOffset","toISOString","start","end","startTime","endTime","formatDateReverse","_this9","reactstrap_es","color","_this10","isOpen","_ref","objectDestructuringEmpty","ItemModal_WarningComponent","content","cn","min","disabled","disableItemInput","addModeBtn","adminButtons","userButtons","WarningComponent","UserModal","oldPassword","userPassword","userPasswordConf","wrongPassword","areCheckedOnce","pwdError","submitChange","toggleUserModalGetSet","DbActions","error","React","MainPage","updateTableRowsRemoteSearch","toggleModalFunc","updateRowsFunc","collapsed","inputIdNameBrandModel","updateTableRows","toggleUserModal","toggleNavbar","updateDropdowns","toggleRentView","onChangeModalGetSet","onChangeModalRemote","toggleUserModalRemote","updateTableRowsRemote","updateTableRowsFunc","savedResult","getDropdownInfo","MainPage_OptionRow","func","dark","autoComplete","right","navbar","ItemTable_ItemTable","Components_ItemModal","Components_UserModal","OptionRow","App","onLogout","onLogin","Switch","Route","exact","path","render","LoginRegister_LoginRegister","assign","Components_MainPage","Redirect","to","pathname","from","location","component","Boolean","window","hostname","match","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.93854e8f.chunk.js","sourcesContent":["// Settings for API endpoint routes. Using proxy!\r\nexport default ({\r\n    getAllAvaileable:'/items/',\r\n    getItem: \"/items/getitem\",\r\n    insertItem:\"/items/insert\",\r\n    modifyItem:\"/items/modify\",\r\n    deleteItem:\"/items/delete\",\r\n    login: \"/login\",\r\n    logout: \"/logout\",\r\n    register: \"/register/\",\r\n    usernameAvailable: \"/register/available\",\r\n    getCategories:\"/items/category\",\r\n    getOwner:\"/items/owner\",\r\n    getAddress:\"/items/address\",\r\n    updatePassword:\"/user/modify\",\r\n    getUserRents:\"/items/rent\",\r\n    getAllRents:\"/items/rent/all\",\r\n    reserveInsert:\"/items/reserve/insert\",\r\n    reserveModify:\"/items/reserve/modify\",\r\n    reserveDelete:\"/items/reserve/delete\",\r\n    rentInsert:\"/items/rent/insert\",\r\n    rentModify:\"/items/rent/modify\",\r\n    rentReturn:\"/items/rent/return\",\r\n    rentReturnReserved:\"/items/rent/returnreserved\"\r\n});\r\n/*\r\n*                   PARAMETERS\r\n* reserveInsert\r\n* user_id\r\n* item_id\r\n* reservation_start\r\n* reservation_end\r\n*\r\n* reserveModify\r\n* id = reservation_rent row id\r\n* user_id\r\n* item_id = for availability check\r\n* reservation_start\r\n* reservation_end\r\n*\r\n* reserveDelete\r\n* id = reservation_rent row id\r\n*\r\n* rentInsert\r\n* id = reservation_rent row id\r\n* item_id = for availability check\r\n* start_date\r\n* end_date\r\n*\r\n* rentModify\r\n* id = reservation_rent row id\r\n* item_id = for availability check\r\n* start_date  = for availability check\r\n* end_date\r\n*\r\n* rentReturn\r\n* id\r\n*\r\n* rentReturnReserved\r\n* id = reservation_rent row id\r\n*\r\n* */","import settings from './Components/Settings';\r\n\r\nclass Auth { // Class to control user access to main page.\r\n    constructor() {\r\n        this.username = \"\";\r\n        this.authenticated = false;\r\n        this.admin = false;\r\n        this.userId =\"\";\r\n        console.log(\"RESET\");\r\n    }\r\n\r\n    usernameAvailable(username) {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(settings.usernameAvailable, {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    username: username\r\n                }),\r\n            }).then(result => result.json())\r\n                .then(result => {\r\n                    if (result.success) {\r\n                        resolve(result.success);\r\n                    } else {\r\n                        console.log(result);\r\n                        reject(false);\r\n                    }\r\n                }).catch(err => console.log(err));\r\n        });\r\n    }\r\n\r\n    register(username, pwd, pwdCheck) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.usernameAvailable(username) && username.length > 3 && (pwd === pwdCheck)) {\r\n                fetch(settings.register, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        Accept: 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        username: username,\r\n                        password: pwd\r\n                    }),\r\n                }).then(result => result.json())\r\n                    .then(result => {\r\n                        if (result.success) {\r\n                            resolve(true);\r\n                        } else {\r\n                            reject(false)\r\n                        }\r\n                    }).catch(err => console.log(err));\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    login(username, password) {\r\n        return new Promise((resolve, reject) => {\r\n            if (username.length > 3 && password.length > 3) {\r\n                fetch(settings.login, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        Accept: 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        \"username\": username,\r\n                        \"password\": password\r\n                    })\r\n                }).then(result => result.json())\r\n                    .then(result => {\r\n                        let sendResult={};\r\n                        if (result[0]) {\r\n                            this.admin = (result[0].admin === 1);\r\n                            this.authenticated = true;\r\n                            this.username = result[0].username;\r\n                            this.userId = result[0].id;\r\n\r\n                            sendResult.username = result[0].username;\r\n                            sendResult.admin = (result[0].admin === 1);\r\n                            sendResult.id = result[0].id;\r\n                            resolve(sendResult);\r\n\r\n                        } else if (result.logged) { // IF all ready logged in\r\n                            this.admin = (result.admin === 1);\r\n                            this.authenticated = true;\r\n                            this.username = result.username;\r\n                            this.userId = result.id;\r\n\r\n                            sendResult.username = result.username;\r\n                            sendResult.admin = (result.admin === 1);\r\n                            sendResult.id = result.id;\r\n                            resolve(sendResult);\r\n                        } else {\r\n                            reject(false);\r\n                        }\r\n                    }).catch(err => console.log(err));\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    logout() {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(settings.logout, {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            }).then(result => result.json())\r\n                .then(result => {\r\n                    if (result.success) {\r\n                        this.authenticated = false;\r\n                        resolve(true);\r\n                    } else {\r\n                        reject(\"logout failed\");\r\n                    }\r\n\r\n                }).catch(err => console.log(err));\r\n        });\r\n\r\n    }\r\n\r\n    isAuthenticated() {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(settings.login, {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({})\r\n            }).then(result => result.json())\r\n                .then(result => {\r\n                    if (result.logged) { // IF all ready logged in\r\n                        this.admin = result.admin;\r\n                        this.authenticated = true;\r\n                        this.username = result.username;\r\n                        resolve(true);\r\n                    } else {\r\n                        reject(false);\r\n                    }\r\n                });\r\n        })\r\n    }\r\n\r\n\r\n    isAdmin() {\r\n        return this.admin;\r\n    }\r\n\r\n    getUsername() {\r\n        return this.username;\r\n    }\r\n}\r\n\r\nexport default new Auth();","import {Component} from \"react\";\r\nimport React from \"react\";\r\nimport Auth from '../Auth';\r\n\r\nexport class LoginRegister extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputUsernameLog: \"\",\r\n            inputPasswordLog: \"\",\r\n            inputUsernameReg: \"\",\r\n            inputPasswordReg: \"\",\r\n            inputPasswordConfReg: \"\",\r\n            regOk: \"undefined\",\r\n            pwdMatch: true,\r\n            pwdCheckedOnce: false,\r\n            usernameAvailable: true,\r\n            usernameLength: true,\r\n            authenticated:false,\r\n            loginFail:false\r\n\r\n        };\r\n        this.checkPwdMatch = this.checkPwdMatch.bind(this);\r\n        this.checkUsername = this.checkUsername.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.registerUser =this.registerUser.bind(this);\r\n\r\n    }\r\n\r\n    _handleKeyPress = (e) => {\r\n        if (e.key === 'Enter') {\r\n            this.tryLogin();\r\n        }\r\n    };\r\n\r\n    checkPwdMatch() {\r\n        this.setState({pwdCheckedOnce: true});\r\n        if (this.state.inputPasswordReg === this.state.inputPasswordConfReg && this.state.inputPasswordReg.length > 3) {\r\n            this.setState({pwdMatch: true});\r\n        } else {\r\n            this.setState({pwdMatch: false});\r\n        }\r\n    }\r\n\r\n    checkUsername() {\r\n        if (this.state.inputUsernameReg.length > 3) {\r\n            Auth.usernameAvailable(this.state.inputUsernameReg)\r\n                .then(() => {\r\n                    this.setState({usernameAvailable: true})\r\n                })\r\n                .catch(() => {\r\n                    this.setState({usernameAvailable: false})\r\n                });\r\n            this.setState({usernameLength: true})\r\n        } else {\r\n            this.setState({usernameLength: false, usernameAvailable: true})\r\n        }\r\n    }\r\n\r\n    handleChange = event => { // Writes changes in the input elements to corresponding state.\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    };\r\n\r\n    displayRegTip() {\r\n        if (typeof this.state.pwdChangeOk === \"undefined\") {\r\n            return \"\";\r\n        } else if (this.state.pwdChangeOk === true) {\r\n            return (\r\n                <div className=\"alert alert-success\" role=\"alert\">\r\n                    Registering was <strong>successful!</strong>\r\n                </div>)\r\n        } else if (this.state.pwdChangeOk === false) {\r\n            return (\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                    Registering <strong>failed</strong>!\r\n                </div>)\r\n        }\r\n    }\r\n\r\n    setLoginFail(state){\r\n        this.setState({loginFail:state})\r\n    }\r\n\r\n    tryLogin(){\r\n        if(this.state.inputUsernameLog <1 || this.state.inputPasswordLog <1){\r\n            this.setLoginFail(true);\r\n        }\r\n        this.props.Login(this.state.inputUsernameLog, this.state.inputPasswordLog)\r\n            .then(() => {\r\n                this.setLoginFail(false);\r\n                this.props.history.push(\"/main\");\r\n            })\r\n            .catch(() => {this.setLoginFail(true);})\r\n    }\r\n\r\n    registerUser(){\r\n        if(this.state.inputPasswordReg === this.state.inputPasswordConfReg && this.state.inputPasswordReg.length >3){\r\n            Auth.register(this.state.inputUsernameReg, this.state.inputPasswordReg, this.state.inputPasswordConfReg)\r\n                .then(() => {\r\n                    this.setState({pwdChangeOk: true,\r\n                        loginFail:false,\r\n                        inputUsernameLog: \"\",\r\n                        inputPasswordLog: \"\",\r\n                        inputUsernameReg: \"\",\r\n                        inputPasswordReg: \"\",\r\n                        inputPasswordConfReg: \"\",\r\n                    })\r\n                })\r\n                .catch(() => {this.setState({pwdChangeOk: false,loginFail:false})})\r\n        }else{\r\n            this.setState({pwdChangeOk: false, loginFail:false,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Login\">\r\n                <div className=\"login text-center\">\r\n                    <div className=\"loginOther\">\r\n                        <div className=\"form-signin \">\r\n                            {this.displayRegTip()}\r\n                            {this.state.loginFail?\r\n                                <div className=\"alert alert-danger\" role=\"alert\">\r\n                                Wrong username or password!\r\n                            </div>:\"\"}\r\n                            <h1>RENTALIX</h1>\r\n                            <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\r\n                            <label htmlFor=\"inputUsernameLog\" className=\"sr-only\">Username</label>\r\n                            <input type=\"text\" id=\"inputUsernameLog\" onChange={this.handleChange}\r\n                                   className=\"form-control my-1 py-3\" placeholder=\"Username\" onKeyPress={this._handleKeyPress}\r\n                                   required\r\n                                   autoFocus/>\r\n                            <label htmlFor=\"inputPasswordLog\" className=\"sr-only\">Password</label>\r\n                            <input type=\"password\" id=\"inputPasswordLog\" onChange={this.handleChange}\r\n                                   className=\"form-control my-1 py-3\" placeholder=\"Password\" onKeyPress={this._handleKeyPress}\r\n                                   required/>\r\n                            <button className=\"btn btn-lg btn-primary btn-block\" type=\"button\"\r\n                                    onClick={() => {this.tryLogin()}}>Sign in\r\n                            </button>\r\n\r\n                            <button type=\"button\" className=\"btn btn-link\" data-toggle=\"modal\"\r\n                                    data-target=\"#register\">\r\n                                Register\r\n                            </button>\r\n                            <br/>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"modal fade\" id=\"register\" tabIndex=\"-1\" role=\"dialog\"\r\n                             aria-labelledby=\"registerCenterTitle\" aria-hidden=\"true\">\r\n                            <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                                <div className=\"modal-content\">\r\n\r\n                                    <div className=\"modal-header\">\r\n                                        <h2 className=\"modal-title\" id=\"registerLongTitle\">Register</h2>\r\n                                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\"\r\n                                                aria-label=\"Close\">\r\n                                            <span aria-hidden=\"true\">&times;</span>\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"modal-body px-5\">\r\n\r\n                                        <label htmlFor=\"inputUsernameReg\" className=\"sr-only\">Username</label>\r\n                                        <input type=\"text\" id=\"inputUsernameReg\" onChange={this.handleChange}\r\n                                               onBlur={this.checkUsername} className=\"form-control my-1 py-3\"\r\n                                               placeholder=\"Username\"\r\n                                               required\r\n                                               autoFocus/>\r\n                                        {this.state.usernameAvailable ? \"\" : <UsernameTaken/>}\r\n                                        {this.state.usernameLength ? \"\" : <UsernameLength/>}\r\n\r\n                                        <label htmlFor=\"inputPasswordReg\" className=\"sr-only\">Password</label>\r\n                                        <input type=\"password\" id=\"inputPasswordReg\"\r\n                                               onChange={this.handleChange}\r\n                                               onBlur={this.state.pwdCheckedOnce ? this.checkPwdMatch : () => {\r\n                                               }} className=\"form-control my-1 py-3\" placeholder=\"Password\"\r\n                                               required/>\r\n                                        <label htmlFor=\"inputPasswordConfReg\" className=\"sr-only\">Password\r\n                                            confirmation</label>\r\n                                        <input type=\"password\" id=\"inputPasswordConfReg\"\r\n                                               onChange={this.handleChange} onBlur={this.checkPwdMatch}\r\n                                               className=\"form-control my-1 py-3\"\r\n                                               placeholder=\"Password confirmation\"\r\n                                               required/>\r\n                                        {this.state.pwdMatch || !this.state.pwdCheckedOnce ? \"\" : <PwdTip/>}\r\n                                    </div>\r\n                                    <div className=\"modal-footer px-5 pb-5\">\r\n                                        <button type=\"button\" className=\"btn btn-secondary\"\r\n                                                data-dismiss=\"modal\">Close\r\n                                        </button>\r\n                                        <button type=\"button\"\r\n                                                onClick={this.registerUser}\r\n                                                data-dismiss=\"modal\" className=\"btn btn-success\">Register\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nconst\r\n    UsernameTaken = () => {\r\n        return (\r\n            <div id=\"usernameTaken\" className=\"\">\r\n                <small id=\"usernameHelp\" className=\"text-danger\">\r\n                    Username is all ready taken!\r\n                </small>\r\n            </div>\r\n        );\r\n    };\r\n\r\nconst\r\n    UsernameLength = () => {\r\n        return (\r\n            <div id=\"usernameLength\" className=\"\">\r\n                <small id=\"usernameHelp\" className=\"text-danger\">\r\n                    Username must be longer than three characters!\r\n                </small>\r\n            </div>\r\n        );\r\n    };\r\n\r\n\r\nclass PwdTip\r\n    extends Component { // Is shown IF password does not meet the minimum requirements.\r\n    render() {\r\n        return (\r\n            <div id=\"pwdTip\" className=\"\">\r\n                <small id=\"passwordHelp\" className=\"text-danger\">\r\n                    Passwords must be 4-30 long and they have to match!\r\n                </small>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n","import settings from './Components/Settings';\r\n\r\nclass DbAction { // Class to control user access to main page.\r\n    constructor() {\r\n        this.itemData = [];\r\n        this.itemToModifyId=\"\";\r\n    }\r\n\r\n    fetchItems(id, name, brand,model, info, address, owner, category) {\r\n        return new Promise((resolve, reject) => {\r\n                fetch(settings.getAllAvaileable, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        Accept: 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        \"id\": id || \"\",\r\n                        \"name\": name || \"\",\r\n                        \"model\": model || \"\",\r\n                        \"brand\": brand || \"\",\r\n                        \"itemInfo\": info || \"\",\r\n                        \"address\": address || \"\",\r\n                        \"owner\": owner || \"\",\r\n                        \"category\": category || \"\"\r\n                    })\r\n                }).then(result => result.json())\r\n                    .then((result) => {\r\n                        resolve(result);\r\n                    })\r\n                    .catch(() => {\r\n                        reject(\"Fetching failed!\")\r\n                    });\r\n        });\r\n    }\r\n\r\n    getItem(id) {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(settings.getItems, {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    \"id\": id\r\n                })\r\n            }).then(result => result.json())\r\n                .then((result) => {\r\n                    resolve(result);\r\n                })\r\n                .catch((err) => {\r\n                    reject(err)\r\n                });\r\n        });\r\n    }\r\n\r\n    insertItem(name,  brand,model, info, address, owner, category) {\r\n        console.log(name,address,owner);\r\n        return new Promise((resolve, reject) => {\r\n                fetch(settings.insertItem, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        Accept: 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        \"name\": name || \"\",\r\n                        \"model\": model || \"\",\r\n                        \"brand\": brand || \"\",\r\n                        \"itemInfo\": info || \"\",\r\n                        \"address\": address || \"\",\r\n                        \"owner\": owner || \"\",\r\n                        \"category\": category || \"\"\r\n                    }),\r\n                })\r\n                    .then(result => result.json())\r\n                    .then(result => {\r\n                        this.itemData = result\r\n                    })\r\n                    .then(() => {\r\n                        resolve(true);\r\n                    })\r\n                    .catch(() => {\r\n                        reject(false)\r\n                    });\r\n\r\n        });\r\n    }\r\n\r\n    modifyItem(id,name, brand,model, info, address, owner, category) {\r\n        return new Promise((resolve, reject) => {\r\n                fetch(settings.modifyItem, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        Accept: 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        \"id\": id,\r\n                        \"name\": name || \"\",\r\n                        \"model\": model || \"\",\r\n                        \"brand\": brand || \"\",\r\n                        \"itemInfo\": info || \"\",\r\n                        \"address\": address || \"\",\r\n                        \"owner\": owner || \"\",\r\n                        \"category\": category || \"\"\r\n                    }),\r\n                })\r\n                    .then(result => result.json())\r\n                    .then(result => {\r\n                        resolve(result);\r\n                    })\r\n                    .catch(() => {\r\n                        reject(\"Item modify failed\")\r\n                    });\r\n\r\n        });\r\n    }\r\n\r\n    deleteItem(id) {\r\n        return new Promise((resolve, reject) => {\r\n                fetch(settings.deleteItem, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        Accept: 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        \"id\": id || \"\"\r\n                    }),\r\n                })\r\n                    .then(result => result.json())\r\n                    .then(result => {\r\n                        this.itemData = result\r\n                    })\r\n                    .then(() => {\r\n                        resolve(true);\r\n                    })\r\n                    .catch(() => {\r\n                        reject(false)\r\n                    });\r\n\r\n        });\r\n    }\r\n\r\n    getDropdownInfo(){\r\n        const dropdownData = {};\r\n        return new Promise((resolve, reject) => {\r\n                fetch(settings.getAddress, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        Accept: 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    }\r\n                }).then(result => result.json())\r\n                    .then((result) => {\r\n                        dropdownData.address = result;\r\n                    })\r\n                    .catch(() => {\r\n                        reject(\"Fetching addresses failed!\")\r\n                    });\r\n\r\n                fetch(settings.getCategories, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        Accept: 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    }\r\n                }).then(result => result.json())\r\n                    .then((result) => {\r\n                        dropdownData.category = result;\r\n                    })\r\n                    .catch(() => {\r\n                        reject(\"Fetching categories failed!\")\r\n                    });\r\n\r\n                fetch(settings.getOwner, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        Accept: 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    }\r\n                }).then(result => result.json())\r\n                    .then((result) => {\r\n                        dropdownData.owner = result;\r\n                        resolve(dropdownData);\r\n                    })\r\n                    .catch(() => {\r\n                        reject(\"Fetching owners failed!\")\r\n                    });\r\n\r\n        });\r\n    }\r\n\r\n    updatePassword(username,password,newPassword){\r\n        return new Promise((resolve, reject) => {\r\n                fetch(settings.updatePassword, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        Accept: 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        \"username\":username,\r\n                        \"password\": password,\r\n                        \"newPassword\":newPassword\r\n                    }),\r\n                })\r\n                    .then(result => result.json())\r\n                    .then(result => {\r\n                        resolve(result);\r\n                    })\r\n                    .catch(() => {\r\n                        reject(\"Password update failed\")\r\n                    });\r\n\r\n        });\r\n    }\r\n\r\n    fetchUserRents(username) {\r\n        return new Promise((resolve, reject) => {\r\n                fetch(settings.getUserRents, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        Accept: 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        \"username\": username || \"\",\r\n\r\n                    })\r\n                }).then(result => result.json())\r\n                    .then((result) => {\r\n                        resolve(result);\r\n                    })\r\n                    .catch(() => {\r\n                        reject(\"Fetching user rents failed!\")\r\n                    });\r\n        });\r\n    }\r\n\r\n    fetchAllRents(search) {\r\n        return new Promise((resolve, reject) => {\r\n                fetch(settings.getAllRents, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        Accept: 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        \"id\": search.text || \"\",\r\n                        \"name\": search.text || \"\",\r\n                        \"model\": search.text || \"\",\r\n                        \"brand\": search.text || \"\",\r\n                        \"address\": search.address || \"\",\r\n                        \"owner\": search.owner || \"\",\r\n                        \"category\": search.category || \"\"\r\n\r\n                    })\r\n                }).then(result => result.json())\r\n                    .then((result) => {\r\n                        resolve(result);\r\n                    })\r\n                    .catch(() => {\r\n                        reject(\"Fetching user rents failed!\")\r\n                    });\r\n        });\r\n    }\r\n\r\n    rentInsert(reservation_id,item_id,start_date,end_date) {\r\n        return new Promise((resolve, reject) => {\r\n                fetch(settings.rentInsert, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        Accept: 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        \"id\": reservation_id,\r\n                        \"item_id\":item_id,\r\n                        \"start_date\": start_date ,\r\n                        \"end_date\": end_date\r\n                    }),\r\n                })\r\n                    .then(result => result.json())\r\n                    .then(result => {\r\n                        resolve(result);\r\n                    })\r\n                    .catch((err) => {\r\n                        reject(err);\r\n                    });\r\n        });\r\n    }\r\n\r\n    rentModify(reservation_id,item_id,start_date,end_date) {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(settings.rentModify, {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    \"id\": reservation_id,\r\n                    \"item_id\":item_id,\r\n                    \"start_date\": start_date ,\r\n                    \"end_date\": end_date\r\n                }),\r\n            })\r\n                .then(result => result.json())\r\n                .then(result => {\r\n                    resolve(result);\r\n                })\r\n                .catch((err) => {\r\n                    reject(err);\r\n                });\r\n        });\r\n    }\r\n\r\n\r\n    rentReturn(reservation_id) {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(settings.rentReturn, {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    \"id\": reservation_id\r\n                }),\r\n            })\r\n                .then(result => result.json())\r\n                .then(result => {\r\n                    resolve(result);\r\n                })\r\n                .catch((err) => {\r\n                    reject(err);\r\n                });\r\n        });\r\n    }\r\n\r\n    rentReturnReserved(reservation_id) {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(settings.rentReturnReserved, {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    \"id\": reservation_id\r\n                }),\r\n            })\r\n                .then(result => result.json())\r\n                .then(result => {\r\n                    resolve(result);\r\n                })\r\n                .catch((err) => {\r\n                    reject(err);\r\n                });\r\n        });\r\n    }\r\n\r\n\r\n    reservationInsert(user_id,item_id,reservation_start,reservation_end) {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(settings.reserveInsert, {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    \"user_id\": user_id,\r\n                    \"item_id\":item_id,\r\n                    \"reservation_start\": reservation_start,\r\n                    \"reservation_end\": reservation_end\r\n                }),\r\n            })\r\n                .then(result => result.json())\r\n                .then(result => {\r\n                    resolve(result);\r\n                })\r\n                .catch(() => {\r\n                    reject(\"Reserving item failed\")\r\n                });\r\n        });\r\n    }\r\n    reservationModify(id,user_id,item_id,reservation_start,reservation_end) {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(settings.reserveModify, {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    \"id\":id,\r\n                    \"user_id\": user_id,\r\n                    \"item_id\":item_id,\r\n                    \"reservation_start\": reservation_start,\r\n                    \"reservation_end\": reservation_end\r\n                }),\r\n            })\r\n                .then(result => result.json())\r\n                .then(result => {\r\n                    resolve(result);\r\n                })\r\n                .catch(() => {\r\n                    reject(\"Modifying reservation item failed\")\r\n                });\r\n        });\r\n    }\r\n\r\n    reservationDelete(id) {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(settings.reserveDelete, {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    \"id\":id\r\n                }),\r\n            })\r\n                .then(result => result.json())\r\n                .then(result => {\r\n                    resolve(result);\r\n                })\r\n                .catch(() => {\r\n                    reject(\"Deleting reservation failed\")\r\n                });\r\n        });\r\n    }\r\n}\r\n\r\nexport default new DbAction();","import {Component} from \"react\";\r\nimport React from \"react\";\r\nimport DbAction from \"../DbAction\";\r\n\r\nexport default class ItemsRowMenu extends Component {\r\n\r\n    deleteRow() {\r\n        DbAction.deleteItem(this.props.id)\r\n            .then(() => {\r\n                this.props.onItemChangeRemote()\r\n            })\r\n    }\r\n\r\n    deleteReservation() {\r\n        if (typeof this.props.rowData.id !== \"undefined\") {\r\n            DbAction.reservationDelete(this.props.rowData.id)\r\n                .then(() => {\r\n                    this.props.onItemChangeRemote()\r\n                })\r\n        }\r\n    }\r\n\r\n    returnRent() {\r\n        if (typeof this.props.rowData.id !== \"undefined\") {\r\n            DbAction.rentReturn(this.props.rowData.id)\r\n                .then(() => {\r\n                    this.props.onItemChangeRemote()\r\n                })\r\n        }\r\n    }\r\n\r\n    returnRentReserved() {\r\n        if (typeof this.props.rowData.id !== \"undefined\") {\r\n            DbAction.rentReturnReserved(this.props.rowData.id)\r\n                .then(() => {\r\n                    this.props.onItemChangeRemote()\r\n                })\r\n        }\r\n    }\r\n\r\n    isInHistory(data) {\r\n        let endDate;\r\n        endDate = new Date(data.reservation_end);\r\n        endDate = endDate.setHours(endDate.getHours() + (endDate.getTimezoneOffset() / 60)); // -2h\r\n        if (endDate < new Date(Date.now())) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.admin) { // ADMIN menus\r\n            if (this.props.rentView) {\r\n                return (\r\n                    <td className=\"dropleft\">\r\n                        <img src=\"./menu32.png\" alt=\"Item menu\" data-toggle=\"dropdown\"/>\r\n                        <div className=\"dropdown-menu\">\r\n\r\n                            <button className={\"dropdown-item\"} type=\"button\" onClick={() => {\r\n                                this.props.toggleModalRemote({\r\n                                    id: this.props.id,\r\n                                    itemInputView: true,\r\n                                    reservationInput: true,\r\n                                    rentInput: true,\r\n                                    rowData: this.props.rowData,\r\n                                    rent_id: this.props.rent_id,\r\n                                    rentView: true\r\n\r\n                                });\r\n                            }}>View\r\n                            </button>\r\n                            <div hidden={this.isInHistory(this.props.rowData)}>\r\n                                <button className={\"dropdown-item\"} type=\"button\" onClick={() => {\r\n                                    this.props.toggleModalRemote({\r\n                                        id: this.props.id,\r\n                                        reservationInput: true,\r\n                                        rentInput: true,\r\n                                        rowData: this.props.rowData,\r\n                                        rent_id: this.props.rent_id,\r\n                                        rentView: true\r\n\r\n                                    });\r\n                                }}>Change reservation / Rent\r\n                                </button>\r\n\r\n                                {this.props.rowData.start_date !== null ?\r\n                                    <button className={\"dropdown-item\"} type=\"button\" onClick={() => {\r\n                                        this.returnRentReserved()\r\n                                    }}>Return to Reserved</button> : \"\"}\r\n\r\n                                {this.props.rowData.start_date !== null ?\r\n                                    <button className={\"dropdown-item\"} type=\"button\" onClick={() => {\r\n                                        this.returnRent()\r\n                                    }}>Return to Stock</button> : \"\"}\r\n\r\n                                {this.props.rowData.start_date === null ?\r\n                                    <button className={\"dropdown-item\"} type=\"button\" onClick={() => {\r\n                                        this.deleteReservation()\r\n                                    }}>Return to Stock</button> : \"\"}\r\n                            </div>\r\n                        </div>\r\n                    </td>\r\n                );\r\n            } else {\r\n                return (\r\n                    <td className=\"dropleft\">\r\n                        <img src=\"./menu32.png\" alt=\"Item menu\" data-toggle=\"dropdown\"/>\r\n                        <div className=\"dropdown-menu\">\r\n                            <button className={\"dropdown-item\"} type=\"button\" onClick={() => {\r\n                                this.props.toggleModalRemote({\r\n                                    id: this.props.id,\r\n                                    itemInputView: true,\r\n                                    rowData: this.props.rowData,\r\n                                    reserveView: true\r\n\r\n                                });\r\n                            }}>View\r\n                            </button>\r\n\r\n                            <button className={\"dropdown-item\"} type=\"button\" onClick={() => {\r\n                                this.props.toggleModalRemote({\r\n                                    id: this.props.id,\r\n                                    itemInput: true,\r\n                                    reservationInput: true,\r\n                                    reserveView: true,\r\n                                    rowData: this.props.rowData\r\n\r\n                                });\r\n                            }}>Modify Item / Reserve\r\n                            </button>\r\n\r\n                            <button className={\"dropdown-item\"} type=\"button\" onClick={() => {\r\n                                this.deleteRow()\r\n                            }}>Delete\r\n                            </button>\r\n\r\n                        </div>\r\n                    </td>\r\n                );\r\n            }\r\n        } else { // USER RENT VIEW MENU\r\n            if (this.props.rentView) {\r\n                return (\r\n                    <td className=\"dropleft\">\r\n                        <img src=\"./menu32.png\" alt=\"Item menu\" data-toggle=\"dropdown\"/>\r\n                        <div className=\"dropdown-menu\">\r\n                            <button id={\"View\"}\r\n                                hidden={this.props.rowData.end_date === null && !this.isInHistory(this.props.rowData) } className={\"dropdown-item\"}\r\n                                    type=\"button\" onClick={() => {\r\n                                this.props.toggleModalRemote({\r\n                                    id: this.props.id,\r\n                                    rentInputView: true,\r\n                                    reservationInput: true,\r\n                                    rowData: this.props.rowData,\r\n                                    rent_id: this.props.rent_id,\r\n                                    rentView: true\r\n                                });\r\n                            }}>View\r\n                            </button>\r\n                            <button id={\"Change\"}\r\n                                hidden={typeof this.props.rowData.start_date !== 'undefined' && this.props.rowData.start_date !== null || this.isInHistory(this.props.rowData)}\r\n                                className={\"dropdown-item\"} type=\"button\" onClick={() => {\r\n                                this.props.toggleModalRemote({\r\n                                    id: this.props.id,\r\n                                    rentInputView: true,\r\n                                    reservationInput: true,\r\n                                    rowData: this.props.rowData,\r\n                                    rent_id: this.props.rent_id,\r\n                                    rentView: true\r\n                                })\r\n                            }}>Change\r\n                            </button>\r\n\r\n                            <button id={\"deleteReservation\"}\r\n                                hidden={typeof this.props.rowData.start_date !== 'undefined' && this.props.rowData.start_date !== null || this.isInHistory(this.props.rowData)}\r\n                                className={\"dropdown-item\"} type=\"button\" onClick={() => {\r\n                                this.deleteReservation()\r\n                            }}>Remove Reservation\r\n                            </button>\r\n                        </div>\r\n                    </td>\r\n                );\r\n            } else { // USER RESERVATION VIEW MENU\r\n                return (\r\n                    <td className=\"dropleft\">\r\n                        <img src=\"./menu32.png\" alt=\"Item menu\" data-toggle=\"dropdown\"/>\r\n                        <div className=\"dropdown-menu\">\r\n                            <button className={\"dropdown-item\"} type=\"button\" onClick={() => {\r\n                                this.props.toggleModalRemote({\r\n                                    id: this.props.id,\r\n                                    itemInputView: true,\r\n                                    rowData: this.props.rowData,\r\n                                    reserveView: true\r\n                                });\r\n                            }}>View\r\n                            </button>\r\n                            <button className={\"dropdown-item\"} type=\"button\" onClick={() => {\r\n                                this.props.toggleModalRemote({\r\n                                    id: this.props.id,\r\n                                    reservationInput: true,\r\n                                    rowData: this.props.rowData,\r\n                                    reserveView: true\r\n\r\n                                });\r\n                            }}>Reserve\r\n                            </button>\r\n                        </div>\r\n                    </td>\r\n                );\r\n            }\r\n        }\r\n\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport ItemTableRowMenu from './ItemRowMenu';\r\n\r\nexport class ItemTableRow extends Component {\r\n    render() {\r\n        if (this.props.rentView) { // Admin and user item view row\r\n            return (\r\n                <tr>\r\n                    <ColData data={this.props.rowData.serial}/>\r\n                    <ColData data={this.props.rowData.name}/>\r\n                    <ColData data={this.props.rowData.brand}/>\r\n                    <ColData data={this.props.rowData.model}/>\r\n                    <ColData data={this.props.rowData.address}/>\r\n                    <ColData data={this.props.rowData.owner}/>\r\n                    <ItemTableRowMenu rowData={this.props.rowData} admin={this.props.admin} onItemChangeRemote={this.props.onItemChangeRemote}\r\n                                      toggleModalRemote={this.props.toggleModalRemote} id={this.props.rowData.serial}/>\r\n                </tr>\r\n            )\r\n        } else{// Admin / User rents and reservations row\r\n                return (\r\n                    <tr>\r\n                        <ColData data={this.props.type}/>\r\n                        <ColData data={this.props.rowData.username}/>\r\n                        <ColData data={this.props.rowData.serial}/>\r\n                        <ColData data={this.props.rowData.name}/>\r\n                        <ColData data={this.props.rowData.owner}/>\r\n                        <ColData data={this.props.start_date}/>\r\n                        <ColData data={this.props.end_date}/>\r\n                        <ItemTableRowMenu type={this.props.type} rowData={this.props.rowData} rentView={true} admin={this.props.admin} onItemChangeRemote={this.props.onItemChangeRemote}\r\n                                          toggleModalRemote={this.props.toggleModalRemote} id={this.props.rowData.serial} rent_id={this.props.rowData.id}/>\r\n                    </tr>\r\n                )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport class ItemTableRowHeader extends Component {\r\n    render() {\r\n\r\n        if (this.props.rentView) {\r\n            return (\r\n                <tr>\r\n                    <ColHeaderData data={\"Serial\"}/>\r\n                    <ColHeaderData data={\"Name\"}/>\r\n                    <ColHeaderData data={\"Brand\"}/>\r\n                    <ColHeaderData data={\"Model\"}/>\r\n                    <ColHeaderData data={\"Location\"}/>\r\n                    <ColHeaderData data={\"Owner\"}/>\r\n                    <ColHeaderData data={\"\"}/>\r\n                </tr>\r\n            )\r\n        } else {\r\n            return (\r\n                <tr>\r\n                    <ColHeaderData data={\"Status\"}/>\r\n                    <ColHeaderData data={\"Username\"}/>\r\n                    <ColHeaderData data={\"Serial\"}/>\r\n                    <ColHeaderData data={\"Name\"}/>\r\n                    <ColHeaderData data={\"Owner\"}/>\r\n                    <ColHeaderData data={\"Start Date\"}/>\r\n                    <ColHeaderData data={\"End Date\"}/>\r\n                    <ColHeaderData data={\"\"}/>\r\n                </tr>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nclass ColData extends Component {\r\n    render() {\r\n        return (\r\n            <td>{this.props.data}</td>\r\n        );\r\n    }\r\n}\r\n\r\nclass ColHeaderData extends Component {\r\n    render() {\r\n        return (\r\n            <th scope=\"col\">{this.props.data}</th>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {ItemTableRow, ItemTableRowHeader} from \"./ItemTableRow\";\r\nimport dbActions from '../DbAction';\r\n\r\nexport default class ItemTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {data: []};\r\n\r\n        this.formatDate = this.formatDate.bind(this);\r\n        // Remote triggered functions\r\n        this.updateRows = this.updateRows.bind(this);\r\n        this.props.updateTableRowsGetSet(this.updateRows);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateRows();\r\n    }\r\n\r\n    updateRows(id, name, brand,model, info, address, owner, category) {\r\n        if(this.props.rentView){ // Reserve view items. Filter search.\r\n            dbActions.fetchItems(id, name, brand,model, info, address, owner, category)\r\n                .then((result) => {this.setState({data: result});})\r\n                .catch((err) => {console.log(err)})\r\n        }else{\r\n            if(this.props.auth.admin){  // Query ALL rents and reservations.\r\n                dbActions.fetchAllRents(this.props.search)\r\n                    .then((result)=>{this.setState({data:result})})\r\n                    .catch((err)=>{console.log(err)})\r\n\r\n            }else{ // Query reservations and rents of the user\r\n                dbActions.fetchUserRents(this.props.auth.username)\r\n                    .then((result)=>{this.setState({data:result})})\r\n                    .catch((err)=>{console.log(err)})\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    formatDate(rowData,startDate){ // Format from 2018-11-27T18:00:00.000Z -> 27-11-2018 18:00\r\n        let formatedDate =\"\";\r\n        let format = (str)=>{\r\n            return (str.slice(8,10)+str.slice(4,8)+str.slice(0,4)+\" | \"+str.slice(11,16))\r\n        };\r\n\r\n        if(rowData.reservation_start !== null && typeof rowData.reservation_start !== \"undefined\"){\r\n            if(startDate){\r\n                if( rowData.start_date !== null){\r\n                    formatedDate = format(rowData.start_date);\r\n                }else{\r\n                    formatedDate = format(rowData.reservation_start);\r\n                }\r\n            } else{\r\n                if( rowData.end_date !== null){\r\n                    formatedDate = format(rowData.end_date);\r\n                }else{\r\n                    formatedDate = format(rowData.reservation_end);\r\n                }\r\n            }\r\n        }\r\n        return formatedDate;\r\n    }\r\n\r\n    typeText(data){ // Returns STATUS badge.\r\n        if(data.start_date === null){\r\n            if(data.username === \"admin\"){\r\n                return <span className={\"badge badge-info\"}>Maintenance</span>;\r\n            }else{\r\n                if(this.isHistory(data.reservation_end)){\r\n                    return <span className={\"badge badge-secondary\"}>Reserved</span>;\r\n                }else{\r\n                return <span className={\"badge badge-warning\"}>Reserved</span>;\r\n                }\r\n            }\r\n        }else{\r\n            if(this.isHistory(data.end_date)){\r\n                return <span className={\"badge badge-secondary\"}>Rented</span>;\r\n\r\n            }else{\r\n                return <span className={\"badge badge-success\"}>Rented</span>;\r\n            }\r\n        }\r\n    }\r\n\r\n    isHistory(data){\r\n        let endDate = new Date(data);\r\n        endDate=endDate.setHours(endDate.getHours()+(endDate.getTimezoneOffset()/60)); // -2h\r\n        if(endDate < new Date(Date.now())){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const result = this.state.data.map((inputRowData, index) =>\r\n\r\n            <ItemTableRow type={this.typeText(inputRowData)}\r\n                          start_date={this.formatDate(inputRowData,true)}\r\n                          end_date={this.formatDate(inputRowData,false)}\r\n                          rentView={this.props.rentView}\r\n                          onItemChangeRemote={this.props.onItemChangeRemote}\r\n                          admin={this.props.auth.admin}\r\n                          toggleModalRemote={this.props.toggleModalRemote}\r\n                          returnHeader={false} key={index}\r\n                          rowData={inputRowData}/>);\r\n\r\n        if(typeof this.state.data[0] !== \"undefined\" && this.props.rentView){\r\n            return (\r\n                <div className=\"ItemTable\">\r\n                    <table className=\"table table-responsive-sm table-striped table-dark\">\r\n                        <thead>\r\n                        <ItemTableRowHeader rentView={this.props.rentView}/>\r\n                        </thead>\r\n                        <tbody>\r\n                        {result}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )\r\n        }else if(typeof this.state.data[0] === \"undefined\"){\r\n            return(\r\n                <div className=\"ItemTable\">\r\n                <div>\r\n                    <span className={\"h3 text-white\"}>No items found!</span>\r\n                </div>\r\n                </div>\r\n            );\r\n        }else{\r\n            return(\r\n                <div className=\"ItemTable\">\r\n                    <table className=\"table table-responsive-sm table-striped table-dark\">\r\n                        <thead>\r\n                        <ItemTableRowHeader rentView={this.props.rentView}/>\r\n                        </thead>\r\n                        <tbody>\r\n                        {result}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            );\r\n        }\r\n\r\n\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport DbAction from \"../DbAction\";\r\nimport {Button, Modal, ModalHeader, ModalBody} from 'reactstrap';\r\n\r\nclass ItemModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: \"\",\r\n            rent_id: \"\",\r\n            inputName: \"\",\r\n            inputBrand: \"\",\r\n            inputModel: \"\",\r\n            inputInfo: \"\",\r\n            inputAddress: \"\",\r\n            inputCategory: \"\",\r\n            inputOwner: \"\",\r\n            inputCategoryDd: \"\",\r\n            inputAddressDd: \"\",\r\n            inputOwnerDd: \"\",\r\n            inputReservationStartDate: \"\",\r\n            inputReservationEndDate: \"\",\r\n            inputReservationStartTime: \"\",\r\n            inputReservationEndTime: \"\",\r\n            inputRentStartDate: \"\",\r\n            inputRentStartTime: \"\",\r\n            inputRentEndDate: \"\",\r\n            inputRentEndTime: \"\",\r\n            modal: false,\r\n            backdrop: true,\r\n            addMode: false,\r\n            modalHeader: \"\",\r\n            reserveView: false,\r\n            rentView: false,\r\n            itemInputView: false,\r\n            itemInput: false,\r\n            reservationInput: false,\r\n            rentInput: false,\r\n            hideDate: false,\r\n            failText: \"\",\r\n            reservationId: \"\",\r\n            reservationFail: false,\r\n            reservationModifyFail: false,\r\n            reservationDeleteFail: false,\r\n            rented: false,\r\n            rentFail: false,\r\n            startDate: \"\",\r\n            newItemFail: false,\r\n            rowData: {},\r\n            dateNow: this.dateNow(),\r\n            timeNow: this.timeNow(),\r\n            isHistory: false\r\n\r\n        };\r\n\r\n        this.onChangeState();\r\n\r\n        this.dateNow = this.dateNow.bind(this);\r\n        this.timeNow = this.timeNow.bind(this);\r\n        this.rentItem = this.rentItem.bind(this);\r\n        this.rentModify = this.rentModify.bind(this);\r\n\r\n        this.reservationModify = this.reservationModify.bind(this);\r\n        this.reserveItem = this.reserveItem.bind(this);\r\n        this.toggle = this.toggle.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.saveChanges = this.saveChanges.bind(this);\r\n    }\r\n\r\n    onChangeState() {\r\n        this.props.toggleModal(this.toggle.bind(this));\r\n    }\r\n\r\n    resetModal() {\r\n        this.setState({\r\n            id: \"\",\r\n            rent_id: \"\",\r\n            inputName: \"\",\r\n            inputBrand: \"\",\r\n            inputModel: \"\",\r\n            inputInfo: \"\",\r\n            inputAddress: \"\",\r\n            inputCategory: \"\",\r\n            inputOwner: \"\",\r\n            inputCategoryDd: \"\",\r\n            inputAddressDd: \"\",\r\n            inputOwnerDd: \"\",\r\n            inputReservationStartDate: \"\",\r\n            inputReservationEndDate: \"\",\r\n            inputReservationStartTime: \"\",\r\n            inputReservationEndTime: \"\",\r\n            inputRentStartDate: \"\",\r\n            inputRentStartTime: \"\",\r\n            inputRentEndDate: \"\",\r\n            inputRentEndTime: \"\",\r\n            modal: !this.state.modal,\r\n            backdrop: true,\r\n            addMode: false,\r\n            modalHeader: \"\",\r\n            reserveView: false,\r\n            rentView: false,\r\n            itemInputView: false,\r\n            itemInput: false,\r\n            reservationInput: false,\r\n            rentInput: false,\r\n            hideDate: false,\r\n            failText: \"\",\r\n            reservationId: \"\",\r\n            reservationFail: false,\r\n            reservationModifyFail: false,\r\n            reservationDeleteFail: false,\r\n            rented: false,\r\n            rentFail: false,\r\n            startDate: \"\",\r\n            newItemFail: false,\r\n            rowData: {},\r\n            dateNow: this.dateNow(),\r\n            timeNow: this.timeNow(),\r\n            isHistory: false\r\n        });\r\n    }\r\n\r\n    dateOrTime(want, data) {\r\n        if (want === \"date\") {\r\n            return data.split('T')[0];\r\n        } else {\r\n            return data.split('T')[1].split('.')[0].slice(0, 5);\r\n        }\r\n    }\r\n\r\n\r\n    toggle(obj) {\r\n        new Promise((resolve) => {\r\n\r\n            if (typeof obj !== 'undefined') {\r\n                let header = \"\";\r\n\r\n\r\n                if (typeof obj.addMode !== 'undefined' && obj.addMode !== null) { // SET modal header\r\n                    header = \"Add new item: \";\r\n                } else if (typeof obj.rentInput !== 'undefined' && obj.rentInput !== null) {\r\n                    header = \"Rent / Reservation info for serial: \";\r\n                } else if (typeof obj.reservationInput !== 'undefined' && obj.reservationInput !== null) {\r\n                    header = \"Reserve item: \";\r\n                }\r\n                else if (typeof obj.itemInputView !== 'undefined' && obj.itemInputView !== null) {\r\n                    header = \"Viewing item: \"\r\n                }\r\n                else {\r\n                    header = \"Editing item: \"\r\n                }\r\n\r\n\r\n                let endDate;\r\n                let isHistory = false;\r\n                let rented = false;\r\n                if (typeof obj.rowData !== 'undefined') { // SET rented and isHistory status.\r\n                    if (typeof obj.rowData.start_date !== 'undefined' && obj.rowData.start_date !== null) {\r\n                        rented = true;\r\n                        endDate = new Date(obj.rowData.end_date);\r\n                        endDate = endDate.setHours(endDate.getHours() + (endDate.getTimezoneOffset() / 60)); // -2h\r\n\r\n                    } else {\r\n                        rented = false;\r\n                        endDate = new Date(obj.rowData.reservation_end);\r\n                        endDate = endDate.setHours(endDate.getHours() + (endDate.getTimezoneOffset() / 60)); // -2h\r\n                    }\r\n                    if (typeof endDate !== 'undefined') {\r\n                        isHistory = new Date(Date.now()) > endDate && true;\r\n                    }\r\n                }\r\n\r\n                let isset = typeof obj.rowData !== 'undefined';\r\n                this.setState({\r\n                    id: typeof obj.id !== 'undefined' ? obj.id : \"\",\r\n                    rent_id: isset && typeof obj.rowData.rent_id !== 'undefined' ? obj.rent_id : \"\",\r\n                    inputName: isset && typeof obj.rowData.name !== 'undefined' ? obj.rowData.name : \"\",\r\n                    inputBrand: isset && typeof obj.rowData.brand !== 'undefined' ? obj.rowData.brand : \"\",\r\n                    inputModel: isset && typeof obj.rowData.model !== 'undefined' ? obj.rowData.model : \"\",\r\n                    inputInfo: isset && typeof obj.rowData.info !== 'undefined' ? obj.rowData.info : \"\",\r\n                    inputAddress:\"\",\r\n                    inputCategory:\"\",\r\n                    inputOwner:\"\",\r\n                    inputAddressDd: isset && typeof obj.rowData.address !== 'undefined' ? obj.rowData.address : \"\",\r\n                    inputCategoryDd: isset && typeof obj.rowData.category !== 'undefined' ? obj.rowData.category : \"\",\r\n                    inputOwnerDd: isset && typeof obj.rowData.owner !== 'undefined' ? obj.rowData.owner : \"\",\r\n                    inputReservationStartDate: isset && typeof obj.rowData.reservation_start !== 'undefined' && obj.rowData.reservation_start !== null ? this.dateOrTime(\"date\", obj.rowData.reservation_start) : \"\",\r\n                    inputReservationEndDate: isset && typeof obj.rowData.reservation_end !== 'undefined' && obj.rowData.reservation_end !== null ? this.dateOrTime(\"date\", obj.rowData.reservation_end) : \"\",\r\n                    inputReservationStartTime: isset && typeof obj.rowData.reservation_start !== 'undefined' && obj.rowData.reservation_start !== null ? this.dateOrTime(\"\", obj.rowData.reservation_start) : \"\",\r\n                    inputReservationEndTime: isset && typeof obj.rowData.reservation_end !== 'undefined' && obj.rowData.reservation_end !== null ? this.dateOrTime(\"\", obj.rowData.reservation_end) : \"\",\r\n                    inputRentStartDate: isset && typeof obj.rowData.start_date !== 'undefined' && obj.rowData.start_date !== null ? obj.rowData.start_date.split('T')[0] : \"\",\r\n                    inputRentEndDate: isset && typeof obj.rowData.end_date !== 'undefined' && obj.rowData.end_date !== null ? obj.rowData.end_date.split('T')[0] : \"\",\r\n                    inputRentStartTime: isset && typeof obj.rowData.start_date !== 'undefined' && obj.rowData.start_date !== null ? obj.rowData.start_date.split('T')[1].split('.')[0].slice(0, 5) : \"\",\r\n                    inputRentEndTime: isset && typeof obj.rowData.end_date !== 'undefined' && obj.rowData.end_date !== null ? obj.rowData.end_date.split('T')[1].split('.')[0].slice(0, 5) : \"\",\r\n                    modal: !this.state.modal,\r\n                    backdrop: true,\r\n                    addMode: typeof obj.addMode !== 'undefined' ? obj.addMode : false,\r\n                    modalHeader: header,\r\n                    itemInputView: typeof obj.itemInputView !== 'undefined' ? obj.itemInputView : false,\r\n                    rentInput: typeof obj.rentInput !== 'undefined' ? obj.rentInput : false,\r\n                    reservationInput: typeof obj.reservationInput !== 'undefined' ? obj.reservationInput : false,\r\n                    reserveView: typeof obj.reserveView !== 'undefined' ? obj.reserveView : false,\r\n                    rentView: typeof obj.rentView !== 'undefined' ? obj.rentView : false,\r\n                    itemInput: typeof obj.itemInput !== 'undefined' ? obj.itemInput : false,\r\n                    hideDate: false,\r\n                    failText: \"\",\r\n                    reservationId: \"\",\r\n                    reservationFail: false,\r\n                    reservationModifyFail: false,\r\n                    reservationDeleteFail: false,\r\n                    rented: rented,\r\n                    rentFail: false,\r\n                    startDate: \"\",\r\n                    newItemFail: false,\r\n                    rowData: typeof obj.rowData !== 'undefined' ? obj.rowData : {},\r\n                    dateNow: this.dateNow(),\r\n                    timeNow: this.timeNow(),\r\n                    isHistory: isHistory\r\n                });\r\n            } else {\r\n                this.resetModal()\r\n            }\r\n        }).then(() => {\r\n            if (!this.state.addMode && this.state.inputName.length > 0) { // Clear the form data IF item details are viewed between add sessions.\r\n                this.setState({\r\n                    inputName: \"\",\r\n                    inputBrand: \"\",\r\n                    inputModel: \"\",\r\n                    inputInfo: \"\",\r\n                    inputAddress: \"\",\r\n                    inputOwner: \"\",\r\n                    inputCategory: \"\",\r\n                    inputAddressDd: \"\",\r\n                    inputOwnerDd: \"\",\r\n                    inputCategoryDd: \"\",\r\n                    newItemFail: false\r\n                });\r\n            }\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        });\r\n    }\r\n\r\n    handleChange = event => { // Writes changes in the input elements to corresponding state.\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    };\r\n\r\n    saveChanges() {\r\n        this.checkInput()\r\n            .then((inputOrDd) => {\r\n                DbAction.modifyItem(\r\n                    this.state.id,\r\n                    this.state.inputName,\r\n                    this.state.inputBrand,\r\n                    this.state.inputModel,\r\n                    this.state.inputInfo,\r\n                    inputOrDd.address,\r\n                    inputOrDd.owner,\r\n                    inputOrDd.category)\r\n                    .then(() => {\r\n                        this.toggle({})\r\n                    })\r\n                    .then(() => {\r\n                        this.props.onItemChangeRemote()\r\n                    })\r\n                    .catch(() => {\r\n                        console.log(\"Something failed in saveChanges()\");\r\n                    })\r\n            });\r\n    }\r\n\r\n\r\n    validateInput() {\r\n        let noErrors = true;\r\n        if (this.state.inputName === \"\") {\r\n            noErrors = false\r\n        }\r\n        if (this.state.inputOwner === \"\" && this.state.inputOwnerDd === \"\") {\r\n            noErrors = false\r\n        }\r\n        if (this.state.inputAddress === \"\" && this.state.inputAddressDd === \"\") {\r\n            noErrors = false\r\n        }\r\n        return noErrors;\r\n    }\r\n\r\n    addItem() {\r\n        if (this.validateInput()) {\r\n            this.checkInput()\r\n                .then((inputOrDd) => {\r\n                    DbAction.insertItem(\r\n                        this.state.inputName,\r\n                        this.state.inputBrand,\r\n                        this.state.inputModel,\r\n                        this.state.inputInfo,\r\n                        inputOrDd.address,\r\n                        inputOrDd.owner,\r\n                        inputOrDd.category)\r\n                        .then(() => {\r\n                            this.setState({newItemFail: false});\r\n                            this.toggle({})\r\n                        })\r\n                        .then(() => {\r\n                            this.props.onItemChangeRemote()\r\n                        })\r\n                        .catch((err) => {\r\n                            this.setState({newItemFail: true});\r\n                            console.log(\"Something failed in addItem() \" + err);\r\n                        })\r\n                });\r\n        } else {\r\n            this.setState({newItemFail: true});\r\n        }\r\n    }\r\n\r\n    reserveItem() {\r\n        if (this.compareDate(this.state.inputReservationStartDate, this.state.inputReservationEndDate, this.state.inputReservationStartTime, this.state.inputReservationEndTime) > -1 && this.state.inputReservationStartDate !== \"\" && this.state.inputReservationEndDate !== \"\" && this.state.inputReservationStartTime !== \"\" && this.state.inputReservationEndTime !== \"\") {\r\n            DbAction.reservationInsert(\r\n                this.props.auth.userId,\r\n                this.state.id,\r\n                this.state.inputReservationStartDate + \" \" + this.state.inputReservationStartTime + \":00\",\r\n                this.state.inputReservationEndDate + \" \" + this.state.inputReservationEndTime + \":00\")\r\n                .then((response) => {\r\n                    if (response.success) {\r\n                        this.setState({reservationFail: false});\r\n                        this.toggle({})\r\n                    } else {\r\n                        if (typeof response.row !== 'undefined') {\r\n                            this.setState({\r\n                                reservationFail: true,\r\n                                failText: response.message + \"          \" + this.formatDate(response.row[0].reservation_start) + \" <-> \" + this.formatDate(response.row[0].reservation_end)\r\n                            });\r\n                        } else {\r\n                            this.setState({\r\n                                reservationFail: true,\r\n                                failText: response.message\r\n                            });\r\n                        }\r\n                    }\r\n                })\r\n                .then(() => {\r\n                    this.props.onItemChangeRemote();\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                })\r\n        } else {\r\n            this.setState({reservationFail: true,failText:\"Error! Check what you inserted is right!\"});\r\n        }\r\n    }\r\n\r\n    reservationModify() {\r\n        if (typeof this.state.rowData.id !== 'undefined' && this.state.inputReservationStartDate !== \"\" && this.state.inputReservationEndDate !== \"\" && this.state.inputReservationStartTime !== \"\" && this.state.inputReservationEndTime !== \"\" && this.compareDate(this.state.inputReservationStartDate, this.state.inputReservationEndDate, this.state.inputReservationStartTime, this.state.inputReservationEndTime) > -1) {\r\n            DbAction.reservationModify(\r\n                this.state.rowData.id,\r\n                this.props.auth.userId,\r\n                this.state.id,\r\n                this.state.inputReservationStartDate + \" \" + this.state.inputReservationStartTime + \":00\",\r\n                this.state.inputReservationEndDate + \" \" + this.state.inputReservationEndTime + \":00\")\r\n                .then((response) => {\r\n                    if (response.success) {\r\n                        this.setState({reservationFail: false});\r\n                        this.toggle({})\r\n                    } else {\r\n                        if (typeof response !== 'undefined') {\r\n                            this.setState({\r\n                                reservationFail: true,\r\n                                failText: response.message + \"          \" + this.formatDate(response.row[0].reservation_start) + \" <-> \" + this.formatDate(response.row[0].reservation_end)\r\n                            });\r\n                        } else {\r\n                            this.setState({\r\n                                reservationFail: true,\r\n                                failText: response.message\r\n                            });\r\n                        }\r\n                    }\r\n                })\r\n                .then(() => {\r\n                    this.props.onItemChangeRemote();\r\n                })\r\n                .catch((err) => {\r\n                    this.setState({reservationFail: true});\r\n                    console.log(err);\r\n                })\r\n        } else {\r\n            this.setState({reservationFail: true,failText:\"Error! Check what you inserted is right!\"});\r\n        }\r\n    }\r\n\r\n\r\n    rentItem() {\r\n        console.log(this.dateNow());\r\n        console.log(this.state.inputReservationStartDate);\r\n        console.log(this.dateNow() >= this.state.inputReservationStartDate);\r\n        if(this.dateNow() >= this.state.inputReservationStartDate){\r\n            if (typeof this.state.rowData.id !== 'undefined' && this.state.inputRentStartDate !== \"\" && this.state.inputRentEndDate !== \"\" && this.state.inputRentStartTime !== \"\" && this.state.inputRentEndTime !== \"\" && this.compareDate(this.state.inputRentStartDate, this.state.inputRentEndDate, this.state.inputRentStartTime, this.state.inputRentEndTime) > -1) {\r\n                DbAction.rentInsert(\r\n                    this.state.rowData.id,\r\n                    this.state.id,\r\n                    this.state.inputRentStartDate + \" \" + this.state.inputRentStartTime + \":00\",\r\n                    this.state.inputRentEndDate + \" \" + this.state.inputRentEndTime + \":00\")\r\n                    .then((response) => {\r\n                        if (response.success) {\r\n                            this.setState({rentFail: false});\r\n                            this.toggle({})\r\n                        } else {\r\n                            if (typeof response !== 'undefined') {\r\n                                this.setState({\r\n                                    rentFail: true,\r\n                                    failText: response.message + \"          \" + this.formatDate(response.row[0].reservation_start) + \" <-> \" + this.formatDate(response.row[0].reservation_end)\r\n                                });\r\n                            } else {\r\n                                this.setState({\r\n                                    rentFail: true,\r\n                                    failText: response.message\r\n                                });\r\n                            }\r\n                        }\r\n                    }).then(() => {\r\n                    this.props.onItemChangeRemote();\r\n                })\r\n                    .catch((err) => {\r\n                        console.log(err);\r\n                    })\r\n            } else {\r\n                this.setState({rentFail: true});\r\n            }\r\n        }else{\r\n            this.setState({\r\n                rentFail: true,\r\n                failText: \"Reservation start date is in the future! Change reservation start date to be able to rent this item!\"\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    rentModify() {\r\n        if (typeof this.state.rowData.id !== 'undefined' && this.state.inputRentStartDate !== \"\" && this.state.inputRentEndDate !== \"\" && this.state.inputRentStartTime !== \"\" && this.state.inputRentEndTime !== \"\" && this.compareDate(this.state.inputRentStartDate, this.state.inputRentEndDate, this.state.inputRentStartTime, this.state.inputRentEndTime) > -1) {\r\n            DbAction.rentModify(\r\n                this.state.rowData.id,\r\n                this.state.id,\r\n                this.state.inputRentStartDate + \" \" + this.state.inputRentStartTime + \":00\",\r\n                this.state.inputRentEndDate + \" \" + this.state.inputRentEndTime + \":00\")\r\n                .then((response) => {\r\n                    if (response.success) {\r\n                        this.setState({rentFail: false});\r\n                        this.toggle({})\r\n                    } else {\r\n                        if (typeof response !== 'undefined') {\r\n                            this.setState({\r\n                                rentFail: true,\r\n                                failText: response.message + \"          \" + this.formatDate(response.row[0].reservation_start) + \" <-> \" + this.formatDate(response.row[0].reservation_end)\r\n                            });\r\n                        } else {\r\n                            this.setState({\r\n                                rentFail: true,\r\n                                failText: response.message\r\n                            });\r\n                        }\r\n\r\n                    }\r\n                }).then(() => {\r\n                this.props.onItemChangeRemote();\r\n            })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                })\r\n        } else {\r\n            this.setState({rentFail: true});\r\n        }\r\n    }\r\n\r\n    formatDate(str) { // Format from 2018-11-27T18:01:00.000Z -> 27-11-2018 18:01\r\n        return (str.slice(8, 10) + str.slice(4, 8) + str.slice(0, 4) + \" | \" + str.slice(11, 16));\r\n    }\r\n\r\n    formatDateReverse(date, time) { // Format from 2018-11-27 + 18:01 -> 2018-11-27T18:01:00\r\n        return (date + 'T' + time + ':00');\r\n    }\r\n\r\n    dateNow() {\r\n        Date.prototype.addTimeOffset = function () { // UTC + Difference\r\n            this.setHours(this.getHours() + (new Date().getTimezoneOffset() / 60 * -1));\r\n            return this;\r\n        };\r\n        return new Date(Date.now()).addTimeOffset().toISOString().slice(0, 10);\r\n    }\r\n\r\n    timeNow() { //\r\n        Date.prototype.addTimeOffset = function () { // UTC + Difference\r\n            this.setHours(this.getHours() + (new Date().getTimezoneOffset() / 60 * -1));\r\n            return this;\r\n        };\r\n        return new Date(Date.now()).addTimeOffset().toISOString().slice(11, 14) + \"00\";\r\n    }\r\n\r\n    compareDate(start, end, startTime, endTime) {\r\n        let startDate = new Date(this.formatDateReverse(start, startTime));\r\n        let endDate = new Date(this.formatDateReverse(end, endTime));\r\n\r\n\r\n        if (startDate < endDate) {\r\n            return 1;\r\n        } else if (startDate === endDate) {\r\n            return 0;\r\n        } else if (startDate > endDate) {\r\n            return -1;\r\n        } else {\r\n            return -1\r\n        }\r\n    }\r\n\r\n    checkInput() { // IF user has typed a value in ANY of the Add New fields. It will override the dropdown value.\r\n        return new Promise((resolve) => {\r\n            const inputOrDd = {};\r\n\r\n            if (this.state.inputAddress !== \"\") {\r\n                inputOrDd.address = this.state.inputAddress;\r\n            } else if (this.state.inputAddressDd !== \"\") {\r\n                inputOrDd.address = this.state.inputAddressDd;\r\n            } else {\r\n                inputOrDd.address = null;\r\n            }\r\n\r\n            if (this.state.inputCategory !== \"\") {\r\n                inputOrDd.category = this.state.inputCategory;\r\n            } else if (this.state.inputCategoryDd !== \"\") {\r\n                inputOrDd.category = this.state.inputCategoryDd;\r\n            } else {\r\n                inputOrDd.category = null;\r\n            }\r\n\r\n            if (this.state.inputOwner !== \"\") {\r\n                inputOrDd.owner = this.state.inputOwner;\r\n            } else if (this.state.inputOwnerDd !== \"\") {\r\n                inputOrDd.owner = this.state.inputOwnerDd;\r\n            } else {\r\n                inputOrDd.owner = null;\r\n            }\r\n\r\n            resolve(inputOrDd);\r\n        });\r\n    }\r\n\r\n    adminButtons() {\r\n        if (this.state.itemInputView) {\r\n            return null\r\n        } else {\r\n            if (this.state.rentView) { // ADMIN Rent view modal buttons\r\n                return (\r\n                    <div>\r\n                        <div className={\"form-row\"} hidden={this.state.rented}>\r\n                            <div className={\"col-md-12\"}>\r\n                                <Button color={\"warning btn-block m-0\"} onClick={this.reservationModify}>\r\n                                    {this.state.rowData.username === \"admin\"?'Save maintenance changes':'Save reservation changes'}\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                        <div className={\"form-row\"} hidden={this.state.rowData.username === \"admin\"}>\r\n                            <div className={\"col-md-12\"}>\r\n                                <Button color={\"success btn-block m-0\"} onClick={this.state.rented? this.rentModify:this.rentItem}>{this.state.rented?'Change Rent':'Rent Item'}</Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                );\r\n            } else { // ADMIN Reserve view modal buttons\r\n                return (\r\n                    <div className={\"form-row\"}>\r\n                        <div className={\"col-md-12\"}>\r\n                            <Button className={\"btn-block m-0\"} color={\"warning\"}\r\n                                    onClick={this.reserveItem}>Reserve for Maintenance</Button>\r\n                        </div>\r\n                        <div className={\"col-md-12\"}>\r\n                            <Button color={\"success btn-block m-0\"} onClick={this.saveChanges}>Save changes</Button>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    userButtons() {\r\n        if (this.state.itemInputView && !this.state.reservationInput) {\r\n            return null;\r\n        } else {\r\n            if (this.state.reservationInput && this.state.rentView) { // USER Rent view modal buttons\r\n                return (\r\n                    <div className={\"form-row\"}>\r\n                        <div className={\"col-md-12\"}>\r\n                            <Button color={\"success btn-block m-0\"} onClick={this.reservationModify}>Save\r\n                                changes</Button>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            } else { // USER Reserve view modal buttons\r\n                return (\r\n                    <div className={\"form-row\"}>\r\n                        <div className={\"col-md-12\"}>\r\n                            <Button className={\"btn-block m-0\"} color={\"success\"}\r\n                                    onClick={this.reserveItem}>Reserve</Button>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    addModeBtn() {\r\n        return (\r\n            <div className={\"form-row\"}>\r\n                <div className={\"col-md-12\"}>\r\n                    <Button color={\"success btn-block m-0\"} onClick={this.addItem}>Add new</Button>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n    disableItemInput() {\r\n        if (this.state.itemInputView || !this.props.auth.admin || this.state.rentInput) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                <Modal isOpen={this.state.modal} toggle={() => {\r\n                    this.toggle()\r\n                }} className={this.props.className}>\r\n                    <ModalHeader toggle={({}) => {\r\n                        this.toggle({})\r\n                    }}>{this.state.modalHeader}{this.state.id}</ModalHeader>\r\n\r\n                    <ModalBody className=\"modal-body\">\r\n\r\n                        <WarningComponent content={this.state.failText}\r\n                                          hidden={!this.state.reservationDeleteFail}\r\n                                          cn={\"alert alert-danger\"}/>\r\n                        <WarningComponent\r\n                            content={this.state.failText.length < 16 ? \"Rent failure! Check that your data correct and is in a right format(DD/MM/YYYY HH.MM)\" : this.state.failText}\r\n                            hidden={!this.state.rentFail}\r\n                            cn={\"alert alert-danger\"}/>\r\n\r\n                        <WarningComponent\r\n                            content={this.state.failText.length < 16 ? \"Reservation failure! Check that your data correct and is in a right format(DD/MM/YYYY HH.MM)\" : this.state.failText}\r\n                            hidden={!this.state.reservationFail}\r\n                            cn={\"alert alert-danger\"}/>\r\n\r\n                        <WarningComponent content={\"Item add failure\"} hidden={!this.state.newItemFail}\r\n                                          cn={\"alert alert-danger\"}/>\r\n\r\n                        <form>\r\n                            <div\r\n                                hidden={this.state.addMode || (this.state.itemInputView && this.state.reserveView && !this.state.reservationInput)}>\r\n                                <div>\r\n                                    <div className=\"form-row\">\r\n                                        <div className=\"form-group col-md-6\">\r\n                                            <label htmlFor=\"inputReservationStartDate\">Reservation Start Date</label>\r\n                                            <input type=\"date\" className=\"form-control\" id=\"inputReservationStartDate\"\r\n                                                   onChange={this.handleChange} min={this.state.dateNow}\r\n                                                   value={this.state.inputReservationStartDate}\r\n                                                   disabled={this.state.rented || this.state.itemInputView || this.state.isHistory}/>\r\n                                        </div>\r\n                                        <div className=\"form-group col-md-6\">\r\n                                            <label htmlFor=\"inputReservationStartTime\">Reservation Start Time</label>\r\n                                            <input type=\"time\" className=\"form-control\" id=\"inputReservationStartTime\"\r\n                                                   onChange={this.handleChange}\r\n                                                   min={this.state.rentInput ? \"\" : this.state.timeNow}\r\n                                                   value={this.state.inputReservationStartTime}\r\n                                                   disabled={this.state.rented|| this.state.itemInputView || this.state.isHistory}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-row\"\r\n                                         hidden={!(this.state.reservationInput || this.state.rentInput)}>\r\n                                        <div className=\"form-group col-md-6\">\r\n                                            <label htmlFor=\"inputReservationEndDate\">Reservation End Date</label>\r\n                                            <input type=\"date\" className=\"form-control\" id=\"inputReservationEndDate\"\r\n                                                   onChange={this.handleChange}\r\n                                                   min={this.state.inputReservationStartDate}\r\n                                                   value={this.state.inputReservationEndDate}\r\n                                                   disabled={this.state.rented|| this.state.itemInputView || this.state.isHistory}/>\r\n                                        </div>\r\n                                        <div className=\"form-group col-md-6\">\r\n                                            <label htmlFor=\"inputReservationEndTime\">Reservation End Time</label>\r\n                                            <input type=\"time\" className=\"form-control\" id=\"inputReservationEndTime\"\r\n                                                   onChange={this.handleChange}\r\n                                                   value={this.state.inputReservationEndTime}\r\n                                                   disabled={this.state.rented || this.state.itemInputView || this.state.isHistory}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr/>\r\n                                </div>\r\n\r\n                                <div\r\n                                    hidden={this.state.rowData.username === \"admin\" ||(this.state.inputRentStartDate === \"\" && !this.props.auth.admin) || (this.state.inputRentStartDate === \"\" && this.props.auth.admin && this.state.itemInputView) || this.state.reserveView}>\r\n                                    <div className=\"form-row\">\r\n                                        <div className=\"form-group col-md-6\">\r\n                                            <label htmlFor=\"inputRentStartDate\">Rent Start Date</label>\r\n                                            <input type=\"date\" className=\"form-control\" id=\"inputRentStartDate\"\r\n                                                   onChange={this.handleChange} min={this.state.inputReservationStartDate}\r\n                                                   value={this.state.inputRentStartDate}\r\n                                                   disabled={this.state.rented || !this.props.auth.admin || this.state.isHistory || this.state.itemInputView}/>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-6\">\r\n                                            <label htmlFor=\"inputRentStartTime\">Rent Start Time</label>\r\n                                            <input type=\"time\" className=\"form-control\" id=\"inputRentStartTime\"\r\n                                                   onChange={this.handleChange} min={this.state.inputReservationStartTime}\r\n                                                   value={this.state.inputRentStartTime}\r\n                                                   disabled={this.state.rented || !this.props.auth.admin || this.state.isHistory || this.state.itemInputView}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-row\">\r\n                                        <div className=\"form-group col-md-6\">\r\n                                            <label htmlFor=\"inputRentEndDate\">Rent End Date</label>\r\n                                            <input type=\"date\" className=\"form-control\" id=\"inputRentEndDate\"\r\n                                                   onChange={this.handleChange} min={this.state.inputRentStartDate}\r\n                                                   value={this.state.inputRentEndDate}\r\n                                                   disabled={(this.state.rented && !this.props.auth.admin) || this.state.isHistory || this.state.itemInputView}/>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-6\">\r\n                                            <label htmlFor=\"inputRentEndTime\">Rent End Time</label>\r\n                                            <input type=\"time\" className=\"form-control\" id=\"inputRentEndTime\"\r\n                                                   onChange={this.handleChange}\r\n                                                   value={this.state.inputRentEndTime}\r\n                                                   disabled={(this.state.rented && !this.props.auth.admin) || this.state.isHistory || this.state.itemInputView}/>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-4\">\r\n                                        <label htmlFor=\"inputName\">Name</label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"inputName\"\r\n                                               placeholder=\"Name\" onChange={this.handleChange}\r\n                                               value={this.state.inputName} disabled={this.disableItemInput()}/>\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-4\">\r\n                                        <label htmlFor=\"inputBrand\">Brand</label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"inputBrand\"\r\n                                               placeholder=\"Brand\" onChange={this.handleChange}\r\n                                               value={this.state.inputBrand} disabled={this.disableItemInput()}/>\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-4\">\r\n                                        <label htmlFor=\"inputModel\">Model</label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"inputModel\"\r\n                                               placeholder=\"Model\" onChange={this.handleChange}\r\n                                               value={this.state.inputModel} disabled={this.disableItemInput()}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"inputInfo\">Info</label>\r\n                                    <textarea className=\"form-control\" id=\"inputInfo\"\r\n                                              placeholder=\"Short description...\" onChange={this.handleChange}\r\n                                              value={this.state.inputInfo} disabled={this.disableItemInput()}/>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"inputAddress\">Add new address</label>\r\n                                    <input value={this.state.inputAddress} type=\"text\" className=\"form-control\"\r\n                                           id=\"inputAddress\"\r\n                                           placeholder=\"Address\" onChange={this.handleChange}\r\n                                           disabled={this.disableItemInput()}/>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"inputAddressDd\">OR Choose address</label>\r\n                                    <select value={!this.props.addMode && this.state.inputAddressDd}\r\n                                            onChange={this.handleChange}\r\n                                            id=\"inputAddressDd\" className=\"form-control\"\r\n                                            disabled={this.disableItemInput()}>\r\n                                        <option value=\"\">Address</option>\r\n                                        {this.props.dropdownData.address}\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-5\">\r\n                                        <label htmlFor=\"inputOwner\">Add new owner</label>\r\n                                        <input value={this.state.inputOwner} type=\"text\" className=\"form-control\"\r\n                                               id=\"inputOwner\"\r\n                                               onChange={this.handleChange} disabled={this.disableItemInput()}/>\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-2\">\r\n                                        <p>OR</p>\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-5\">\r\n                                        <label htmlFor=\"inputOwnerDd\">Choose owner</label>\r\n                                        <select value={!this.props.addMode ? this.state.inputOwnerDd : \"\"}\r\n                                                onChange={this.handleChange}\r\n                                                id=\"inputOwnerDd\" className=\"form-control\"\r\n                                                disabled={this.disableItemInput()}>\r\n                                            <option value=\"\">Owner</option>\r\n                                            {this.props.dropdownData.owner}\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-5\">\r\n                                        <label htmlFor=\"inputCategory\">Add new category</label>\r\n                                        <input value={this.state.inputCategory} type=\"text\" className=\"form-control\"\r\n                                               id=\"inputCategory\"\r\n                                               onChange={this.handleChange} disabled={this.disableItemInput()}/>\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-2\">\r\n                                        <p>OR</p>\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-5\">\r\n                                        <label htmlFor=\"inputCategoryDd\">Choose category</label>\r\n                                        <select value={!this.props.addMode && this.state.inputCategoryDd}\r\n                                                onChange={this.handleChange}\r\n                                                id=\"inputCategoryDd\" className=\"form-control\"\r\n                                                disabled={this.disableItemInput()}>\r\n                                            <option value=\"\">Category</option>\r\n                                            {this.props.dropdownData.category}\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            {(this.props.auth.admin && this.state.addMode) ? this.addModeBtn() : \"\"}\r\n                            {(this.props.auth.admin && !this.state.addMode) && !this.state.isHistory && this.adminButtons()}\r\n                            {!this.props.auth.admin && !this.state.rented && !this.state.isHistory ? this.userButtons() : \"\"}\r\n                        </form>\r\n                    </ModalBody>\r\n\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst WarningComponent = (props) => {\r\n    return (\r\n\r\n        <div hidden={props.hidden} className={props.cn} role=\"alert\">\r\n            {props.content}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ItemModal;\r\n\r\n","import React from 'react';\r\nimport {Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup} from 'reactstrap';\r\nimport DbActions from '../DbAction';\r\n\r\nclass UserModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modal: false,\r\n            oldPassword:\"\",\r\n            userPassword: \"\",\r\n            userPasswordConf: \"\",\r\n            wrongPassword:false,\r\n            areCheckedOnce:false\r\n        };\r\n\r\n        this.pwdError = this.pwdError.bind(this);\r\n        this.submitChange = this.submitChange.bind(this);\r\n        // Remote triggered functions\r\n        this.toggle = this.toggle.bind(this);\r\n        this.props.toggleUserModalGetSet(this.toggle);\r\n    }\r\n\r\n    handleChange = event => { // Writes changes in the input elements to corresponding state.\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    };\r\n\r\n    toggle() {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    }\r\n\r\n    submitChange() {\r\n        if (!this.pwdError()) {\r\n            DbActions.updatePassword(this.props.username,this.state.oldPassword,this.state.userPassword)\r\n                .then((result) => {\r\n                    if(result.success){\r\n                        this.toggle()\r\n                    }else{\r\n                        this.setState({\r\n                            wrongPassword:true\r\n                        })\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err)\r\n                });\r\n        }\r\n    }\r\n\r\n    pwdError() {\r\n        let error = false;\r\n        if (this.state.userPassword !== this.state.userPasswordConf) {\r\n            error = true\r\n        }\r\n        if (this.state.userPassword.length < 4 ) {\r\n            error = true\r\n        }\r\n        return error;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\r\n                    <ModalHeader toggle={this.toggle}>User settings</ModalHeader>\r\n                    <ModalBody>\r\n                        {this.state.areCheckedOnce&&this.pwdError()? <div className=\"alert alert-warning\" role=\"alert\">\r\n                            Passwords don't match OR are shorter than four characters.\r\n                        </div>:\"\"}\r\n                        {this.state.wrongPassword && <div className=\"alert alert-danger\" role=\"alert\">\r\n                            Wrong <strong>old</strong> password!\r\n                        </div>}\r\n                        <Form>\r\n                            <FormGroup>\r\n                                <input type=\"password\" id=\"oldPassword\" onChange={this.handleChange}\r\n                                       className=\"form-control my-1 py-3\" placeholder=\"Old Password\"\r\n                                       required\r\n                                       autoFocus/>\r\n                                <input type=\"password\" id=\"userPassword\" onChange={this.handleChange}\r\n                                       className=\"form-control my-1 py-3\" placeholder=\"New Password\"\r\n                                       required/>\r\n                                <input type=\"password\" id=\"userPasswordConf\" onChange={this.handleChange}\r\n                                       className=\"form-control my-1 py-3\" placeholder=\"New Password Confirmation\"\r\n                                       onBlur={()=>this.setState({areCheckedOnce:true})}\r\n                                       required/>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button className={\"btn btn-success\"} color=\"Success\" onClick={this.submitChange}>Save changes</Button>{' '}\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserModal;","import React, {Component} from 'react';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    UncontrolledButtonDropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n} from 'reactstrap';\r\n// Components\r\nimport ItemTable from './ItemTable';\r\nimport ItemModal from './ItemModal';\r\nimport DbAction from \"../DbAction\";\r\nimport UserModal from './UserModal'\r\n\r\nclass MainPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            authenticated: false,\r\n            toggleModalFunc: () => {\r\n            },\r\n            updateRowsFunc: () => {\r\n            },\r\n            isOpen: false,\r\n            collapsed: true,\r\n            inputIdNameBrandModel: \"\",\r\n            inputAddressDd: \"\",\r\n            inputOwnerDd: \"\",\r\n            inputCategoryDd: \"\",\r\n            dropdownData: {},\r\n            updateTableRows: () => {\r\n            },\r\n            toggleUserModal: () => {\r\n            },\r\n            rentView: true\r\n        };\r\n\r\n        this.toggleNavbar = this.toggleNavbar.bind(this);\r\n        this.updateDropdowns = this.updateDropdowns.bind(this);\r\n        this.toggleRentView = this.toggleRentView.bind(this);\r\n\r\n        // Remote triggered functions\r\n        this.onChangeModalGetSet = this.onChangeModalGetSet.bind(this);\r\n        this.onChangeModalRemote = this.onChangeModalRemote.bind(this);\r\n        this.updateTableRowsGetSet = this.updateTableRowsGetSet.bind(this);\r\n        this.onItemChangeRemote = this.onItemChangeRemote.bind(this);\r\n        this.toggleUserModalGetSet = this.toggleUserModalGetSet.bind(this);\r\n        this.toggleUserModalRemote = this.toggleUserModalRemote.bind(this);\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        this.updateDropdowns();\r\n    }\r\n\r\n    handleChange = event => { // Writes changes in the input elements to corresponding state.\r\n        this.setState({ // Callback version. Fixes normal setState \"lag\" that is's basic behaviour!\r\n            [event.target.id]: event.target.value\r\n        }, () => {\r\n            this.updateTableRowsRemoteSearch()\r\n        });\r\n    };\r\n\r\n    onChangeModalRemote(obj) { // Passed to children that need to toggle modal.\r\n        this.state.toggleModalFunc(obj);\r\n    };\r\n\r\n    onChangeModalGetSet(toggleModalFunc) { // GET/SET toggleModal function from ItemModal. Passed to modal component. Modal calls this function in its constructor and passes the Toggle func as parameter.\r\n        this.setState({\r\n            toggleModalFunc: toggleModalFunc\r\n        })\r\n    }\r\n\r\n    onItemChangeRemote() { // Passed to children that need to Update dropdowns and table rows.\r\n        this.updateDropdowns();\r\n        this.state.updateTableRows();\r\n    }\r\n\r\n\r\n    logout() {\r\n        this.props.logout();\r\n    }\r\n\r\n    toggleNavbar() {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed,\r\n            inputIdNameBrandModel: \"\",\r\n            inputAddressDd: \"\",\r\n            inputOwnerDd: \"\",\r\n            inputCategoryDd: \"\"\r\n        }, () => {\r\n            this.updateTableRowsRemote()\r\n        });\r\n    }\r\n\r\n    updateTableRowsGetSet(updateTableRowsFunc) { // GET/SET updateTableRowsRemote from ItemTable\r\n        this.setState({updateTableRows: updateTableRowsFunc});\r\n    }\r\n\r\n    updateTableRowsRemote() { // Update table rows remotely.\r\n        this.state.updateTableRows(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\");\r\n    }\r\n\r\n    updateTableRowsRemoteSearch() { // Update table rows remotely, according to latest search parameters.\r\n        this.state.updateTableRows(this.state.inputIdNameBrandModel, this.state.inputIdNameBrandModel, this.state.inputIdNameBrandModel, this.state.inputIdNameBrandModel, \"\", this.state.inputAddressDd, this.state.inputOwnerDd, this.state.inputCategoryDd);\r\n    }\r\n\r\n    updateDropdowns() {\r\n        const savedResult = {};\r\n        DbAction.getDropdownInfo()\r\n            .then((result) => {\r\n                savedResult.owner = result.owner.map((inputRowData, index) =>\r\n                    <OptionRow key={index} rowData={inputRowData.owner}/>);\r\n\r\n                savedResult.address = result.address.map((inputRowData, index) =>\r\n                    <OptionRow key={index} rowData={inputRowData.address}/>);\r\n\r\n                savedResult.category = result.category.map((inputRowData, index) =>\r\n                    <OptionRow key={index} rowData={inputRowData.category}/>);\r\n            }).then(() => {\r\n            this.setState({\r\n                dropdownData: savedResult\r\n            })\r\n        })\r\n            .catch();\r\n    }\r\n\r\n    toggleUserModalGetSet(func) {\r\n        this.setState({\r\n            toggleUserModal: func\r\n        });\r\n    }\r\n\r\n    toggleUserModalRemote() {\r\n        this.state.toggleUserModal();\r\n    }\r\n\r\n    toggleRentView(value) {\r\n        this.setState({\r\n            inputIdNameBrandModel: \"\",\r\n            inputAddressDd: \"\",\r\n            inputOwnerDd: \"\",\r\n            inputCategoryDd: \"\",\r\n            rentView: value,\r\n            collapsed: true\r\n        }, () => {\r\n            this.updateTableRowsRemote()\r\n        });\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"MainPage\">\r\n\r\n                <div>\r\n                    <Navbar color=\"\" dark className={\"m-0 p-0\"}>\r\n                            <div className={\"row container-fluid mx-auto\"}>\r\n                                <span className=\"h1 font-weight-bold text-white float-md-left\"><img className={\"App-logo mx-0 p-0\"}\r\n                                                                                      src=\"./gear64.ico\" alt=\"\"/>RENTALIX</span>\r\n                                <div className={\" menuItems\"}>\r\n                                    <img src=\"./search.png\" alt=\"\" onClick={this.toggleNavbar}/>\r\n                                    <div className=\"btn-group btn-group-toggle px-1\" data-toggle=\"buttons\">\r\n                                        <label className=\"btn btn-secondary active\">\r\n                                            <input type=\"radio\" name=\"options\" id=\"option1\" autoComplete=\"off\"/> <img\r\n                                            src=\"./rent32.ico\" alt=\"Rent\" onClick={() => {\r\n                                            this.toggleRentView(true)\r\n                                        }}/>\r\n                                        </label>\r\n                                        <label className=\"btn btn-secondary\">\r\n                                            <input type=\"radio\" name=\"options\" id=\"option2\" autoComplete=\"off\"/> <img\r\n                                            src=\"./personalView32.ico\" alt=\"Personal\" onClick={() => {\r\n                                            this.toggleRentView(false)\r\n                                        }}/>\r\n                                        </label>\r\n                                    </div>\r\n\r\n                                    <UncontrolledButtonDropdown>\r\n                                        <DropdownToggle>\r\n                                            <img src=\"./menu32.png\" alt=\"Menu\"/>\r\n                                        </DropdownToggle>\r\n                                        <DropdownMenu right>\r\n                                            <DropdownItem header>Menu</DropdownItem>\r\n                                            {this.props.auth.admin ? <DropdownItem onClick={() => {\r\n                                                this.onChangeModalRemote({id: \"-\", addMode: true})\r\n                                            }}>Add item</DropdownItem> : \"\"}\r\n                                            <DropdownItem onClick={this.toggleUserModalRemote}>Settings</DropdownItem>\r\n                                            <DropdownItem onClick={() => this.logout()}>Logout</DropdownItem>\r\n                                        </DropdownMenu>\r\n                                    </UncontrolledButtonDropdown>\r\n                                </div>\r\n                            </div>\r\n\r\n                        <Collapse isOpen={!this.state.collapsed} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <form>\r\n                                        <div className=\"form-row\">\r\n                                            <div className=\"form-group col-md-12\">\r\n                                                <input type=\"text\" className=\"form-control\" id=\"inputIdNameBrandModel\"\r\n                                                       placeholder=\"Search by serial, name, model, brand.\"\r\n                                                       onChange={this.handleChange}\r\n                                                       value={this.state.inputIdNameBrandModel}/>\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className=\"form-row\">\r\n                                            <div className=\"form-group col-md-4\">\r\n                                                <select onChange={this.handleChange}\r\n                                                        value={this.state.inputAddressDd}\r\n                                                        id=\"inputAddressDd\"\r\n                                                        className=\"form-control\">\r\n                                                    <option value=\"\">Location</option>\r\n                                                    {this.state.dropdownData.address}\r\n                                                </select>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group col-md-4\">\r\n                                                <select onChange={this.handleChange}\r\n                                                        value={this.state.inputOwnerDd}\r\n                                                        id=\"inputOwnerDd\"\r\n                                                        className=\"form-control\">\r\n                                                    <option value=\"\">Owner</option>\r\n                                                    {this.state.dropdownData.owner}\r\n                                                </select>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group col-md-4\">\r\n                                                <select onChange={this.handleChange}\r\n                                                        value={this.state.inputCategoryDd}\r\n                                                        id=\"inputCategoryDd\"\r\n                                                        className=\"form-control\">\r\n                                                    <option value=\"\">Category</option>\r\n                                                    {this.state.dropdownData.category}\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </Navbar>\r\n                </div>\r\n\r\n\r\n                <ItemTable search={{\r\n                    text: this.state.inputIdNameBrandModel,\r\n                    address: this.state.inputAddressDd,\r\n                    owner: this.state.inputOwnerDd,\r\n                    category: this.state.inputCategoryDd\r\n                }}\r\n                           rentView={this.state.rentView}\r\n                           updateTableRowsGetSet={this.updateTableRowsGetSet}\r\n                           toggleModalRemote={this.onChangeModalRemote}\r\n                           onItemChangeRemote={this.onItemChangeRemote}\r\n                           auth={this.props.auth}\r\n                />\r\n\r\n\r\n                <ItemModal updateDropdowns={this.updateDropdowns}\r\n                           dropdownData={this.state.dropdownData}\r\n                           toggleModal={this.onChangeModalGetSet}\r\n                           auth={this.props.auth}\r\n                           onItemChangeRemote={this.onItemChangeRemote}\r\n                />\r\n                <UserModal toggleUserModalGetSet={this.toggleUserModalGetSet}\r\n                           username={this.props.auth.username}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport class OptionRow extends Component {\r\n    render() {\r\n        return (\r\n            <option value={this.props.rowData}>{this.props.rowData}</option>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainPage;","import React, {Component} from 'react';\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport './App.css';\r\n// Components\r\nimport {LoginRegister} from './Components/LoginRegister'\r\nimport MainPage from './Components/MainPage'\r\nimport Auth from './Auth';\r\n\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            auth:{\r\n                username: \"\",\r\n                authenticated:false,\r\n                admin:false\r\n            }\r\n\r\n        };\r\n        this.onLogout = this.onLogout.bind(this);\r\n        this.onLogin = this.onLogin.bind(this);\r\n    }\r\n\r\n    onLogin(username,password){\r\n        return new Promise((resolve,reject)=>{\r\n            Auth.login(username,password)\r\n                .then((result)=>{\r\n                    this.setState({auth:{authenticated:true,userId:result.id,admin:result.admin,username:result.username}});\r\n                }).then(()=>resolve( ))\r\n                .catch((err)=>reject(console.log(err)))\r\n        });\r\n    }\r\n\r\n    onLogout(){\r\n        return new Promise((resolve,reject)=>{\r\n            Auth.logout()\r\n                .then(()=>{\r\n                    this.setState({auth:{authenticated:false,userId:\"\",admin:false,username:\"\"}});\r\n                }).then(()=>resolve())\r\n                .catch((err)=>reject(console.log(err)))\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"App\"}>\r\n                <Switch>\r\n\r\n                    <Route exact path=\"/\" render={ props => <LoginRegister {...props} Login={this.onLogin}/>} />\r\n\r\n                    {this.state.auth.authenticated?\r\n                        <Route exact path=\"/main\" render={ props => <MainPage {...props} logout={this.onLogout} auth={this.state.auth} />} />\r\n                        :\r\n                        <Redirect to={{pathname: \"/\", state: { from: this.props.location }}}/>}\r\n\r\n                    <Route path=\"*\" component={() => \"404 NOT FOUND\"} />\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. MainPage is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom'\r\n\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}